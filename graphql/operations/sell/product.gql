# 成品销售:列表分页
query pageSaleOrder($queryQueryOrderInput: QuerySaleOrderInput, $page: Page) {
  pageSaleOrder(queryQueryOrderInput: $queryQueryOrderInput, page: $page) {
    records {
      outOrderId
      outOrderType
      outOrderTypeName
      outOrderCode
      commodityTypeId
      commodityTypeName
      customerType
      customerTypeName
      customerId
      customerName
      saleTime
      outOrderStatus
      outOrderStatusName
      warehouseId
      warehouseName
      createUserName
      createTime
      outOrderDescription
      errorDescription
      customerDistributionId
      customerDistributionName
      commodityList {
        outOrderItemId
        commodityId
        commodityName
        commoditySkuId
        commoditySpecOptionId
        skuTextDescription
        maxQuantity
        planQuantity
        realQuantity
        totalTypeName
        salePrice
        specificationLabel
        packageLabel
        packageRequireInfos {
          commodityId
          requestText
        }
        quantityLabel
        categoryId
        commodityStatus
        saleTotalPrice
        totalQuantity
        totalType {
          unitId
          unitName
        }
        unitQuantity
        unitType {
          unitId
          unitName
        }
      }
      countReturnApply
      canSaleReturn
      rejectCount
      belongOrg {
        orgId
        orgName
      }
    }
    pageCurrent
    pageSize
    totalRecords
  }
}

# 列表计数
query countSaleOrderStatus($countSaleOrderStatusInput: CountSaleOrderStatusInput) {
  countSaleOrderStatus(countSaleOrderStatusInput: $countSaleOrderStatusInput) {
    toSubmit
    toAudit
    producing
    toOutbound
    finished
  }
}

# 新建
mutation createSaleOrder($createSaleOrderInput: CreateSaleOrderInput) {
  createSaleOrder(createSaleOrderInput: $createSaleOrderInput)
}

# 成品销售:订单详情
query saleOrder($saleOrderInput: SaleOrderInput) {
  saleOrder(saleOrderInput: $saleOrderInput) {
    outOrderId
    outOrderType
    outOrderTypeName
    outOrderCode
    commodityTypeId
    commodityTypeName
    customerType
    customerTypeName
    customerId
    customerName
    saleTime
    outOrderStatus
    outOrderStatusName
    warehouseId
    warehouseName
    createUserName
    createTime
    outOrderDescription
    errorDescription
    customerDistributionId
    customerDistributionName
    commodityList {
      outOrderItemId
      commodityId
      commodityName
      commoditySkuId
      commoditySpecOptionId
      skuTextDescription
      maxQuantity
      planQuantity
      realQuantity
      totalTypeName
      salePrice
      specificationLabel
      packageLabel
      packageRequireInfos {
        commodityId
        requestText
      }
      quantityLabel
      categoryId
      commodityStatus
      saleTotalPrice
      totalQuantity
      totalType {
        unitId
        unitName
      }
      unitQuantity
      unitType {
        unitId
        unitName
      }
      salePriceType {
        unitId
        unitName
      }
      summaryStockTotalQuantity
      summaryStockUnitQuantity
      conversion
      stockBatchInfo {
        customerBelongInfo {
          customerId
          customerName
          customerType
        }
        batchCode
        batchId
        createTime
        totalQuantity
        unitQuantity
      }
    }
    countReturnApply
    canSaleReturn
    rejectCount
    plan {
      planId
      planCode
      planStatus
      customerType
      customerId
      customerName
      customerDistributionId
      customerDistributionName
      planDate
      planStartTime
      planEndTime
      planDescription
      createType
      commodityType
      belongOrg {
        orgId
        orgName
      }
      warehouse {
        warehouseId
        warehouseName
      }
    }
    belongOrg {
      orgId
      orgName
    }
  }
}

# 出库记录数量
query countOutStockRecord($countOutStockRecordInput: CountOutStockRecordInput) {
  countOutStockRecord(countOutStockRecordInput: $countOutStockRecordInput)
}

# 更新
mutation updateSaleOrder($updateSaleOrderInput: UpdateSaleOrderInput) {
  updateSaleOrder(updateSaleOrderInput: $updateSaleOrderInput)
}

# 提交
mutation submitSaleOrder($outOrderId: ID!) {
  submitSaleOrder(outOrderId: $outOrderId)
}

# 再来一单
mutation copySaleOrder($saleOrderInput: SaleOrderInput) {
  copySaleOrder(saleOrderInput: $saleOrderInput)
}

# 取消订单
mutation cancelSaleOrder($cancelOutOrderInput: CancelOutOrderInput) {
  cancelSaleOrder(cancelOutOrderInput: $cancelOutOrderInput)
}

# 撤销订单
mutation undoSaleOrder($undoSaleOrderInput: UndoSaleOrderInput) {
  undoSaleOrder(undoSaleOrderInput: $undoSaleOrderInput)
}

query outOrderLogs($outOrderLogsInput: OutOrderLogsInput) {
  outOrderLogs(outOrderLogsInput: $outOrderLogsInput) {
    outOrderLogId
    outOrderId
    outOrderLogType
    outOrderLogTypeText
    outOrderLogDescription
    createTime
    createBy
    createUserName
  }
}

# 修改预估销量
mutation updatePlanQuantity($updatePlanQuantityInput: UpdatePlanQuantityInput) {
  updatePlanQuantity(updatePlanQuantityInput: $updatePlanQuantityInput)
}

# 退货记录条数
query countSaleReturnRecord($saleOrderInput: SaleOrderInput) {
  countSaleReturnRecord(saleOrderInput: $saleOrderInput)
}

# 退货入库记录页面接口
query inboundRecords($outOrderId: ID!) {
  inboundRecords(outOrderId: $outOrderId) {
    inApplyCode
    toBeInBoundList {
      commodityName
      skuTextDescription
      unitQuantity
      unitTypeName
      totalQuantity
      totalTypeName
    }
    inboundRecordList {
      inboundRecordItems {
        commodityName
        skuTextDescription
        unitQuantity
        unitTypeName
        totalQuantity
        totalTypeName
        unitPrice
        unitPriceTypeName
        totalPrice
        batchCode
      }
      totalPrice
      inOrderCode
      createUserName
      inboundTime
      remark
    }
  }
}

# 成品销售:拒绝申请通知清空
mutation rejectNoticeEmptied($rejectNoticeEmptiedInput: RejectNoticeEmptiedInput) {
  rejectNoticeEmptied(rejectNoticeEmptiedInput: $rejectNoticeEmptiedInput) {
    result
  }
}

# 成品销售:取消生产
mutation cancelSaleProduction($cancelSaleProductionInput: CancelSaleProductionInput) {
  cancelSaleProduction(cancelSaleProductionInput: $cancelSaleProductionInput) {
    result
  }
}

# 成品销售:检查是否存在出库操作
query checkIfPicking($checkIfPickingInput: CheckIfPickingInput) {
  checkIfPicking(checkIfPickingInput: $checkIfPickingInput) {
    result
  }
}

# 成品销售:取消销售
mutation cancelSaleOrderCommodity($cancelSaleOrderCommodityInput: CancelSaleOrderCommodityInput) {
  cancelSaleOrderCommodity(
    cancelSaleOrderCommodityInput: $cancelSaleOrderCommodityInput
  )
}

# 成品销售:更新预估单价
mutation updateSalePrice($updateSalePriceInput: UpdateSalePriceInput) {
  updateSalePrice(updateSalePriceInput: $updateSalePriceInput)
}