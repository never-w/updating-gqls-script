# 内部销售: 详情页
query internalSaleOrder($input: PitayaInternalSaleIDInput!) {
  internalSaleOrder(input: $input) {
    belongOrg {
      orgId
      orgName
    }
    billDetailsList {
      billCostData
      billDetailId
      billMainId
      businessItemValue
      costAmount
      costId
      costName
      dictItemId
      note
      paymentType
      ruleCode
      ruleId
      showField
      supplier {
        supplierId
        supplierName
      }
    }
    billMainId
    commodities {
      commoditySku {
        categoryId
        categoryName
        commodityId
        commodityName
        commoditySkuId
        commoditySkuName
        commoditySpecOptionId
        commoditySpecOptionName
        availableSkuQuantity {
          businessUnit {
            unitId
            unitName
          }
          unit {
            unitId
            unitName
          }
          conversion
        }
        baseUnit {
          unitId
          unitName
        }
      }
      itemId
      saleId
      salePrice
      saleTotalPrice
      batchInfoWithLock {
        batchCode
        batchId
        customerBelongInfo {
          customerId
          customerName
          customerType
        }
        unit {
          unitId
          unitName
        }
        quantity
        quantityItem {
          unit {
            unitId
            unitName
          }
          quantity
        }
      }
      mark
      markName
      dynamicQuantity {
        unit {
          unitId
          unitName
        }
        quantity
        quantityItem {
          unit {
            unitId
            unitName
          }
          quantity
        }
      }
    }
    commodityTotalSalePrice
    commodityTypeId
    commodityTypeName
    createBy {
      phoneNum
      userId
      userName
    }
    createTime
    customer {
      customerId
      customerName
      customerType
      lastLevelId
      lastLevelName
    }
    remark
    saleCode
    saleId
    saleStatus
    saleStatusName
    saleTime
    templateId
    totalTransportFees
    warehouse {
      warehouseId
      warehouseName
    }
    logs {
      createBy {
        phoneNum
        userId
        userName
      }
      createTime
      logType
      logTypeText
    }
    saleSubType
    saleSubTypeName
    appType
    saleReturnOrders {
      belongOrg {
        orgId
        orgName
      }
      createBy {
        phoneNum
        userId
        userName
      }
      customer {
        customerId
        customerName
        customerType
        lastLevelId
        lastLevelName
      }
      bill2FetchData {
        billDetailsList {
          supplier {
            supplierId
            supplierName
          }
          billCostData
          billDetailId
          billMainId
          businessItemValue
          costAmount
          costId
          costName
          dictItemId
          note
          paymentType
          ruleCode
          ruleId
          showField
        }
        billMainId
        templateId
        totalTransportFees
      }
      commodities {
        commoditySku {
          categoryId
          categoryName
          commodityId
          commodityName
          commoditySkuId
          commoditySkuName
          commoditySpecOptionId
          commoditySpecOptionName
          availableSkuQuantity {
            businessUnit {
              unitId
              unitName
            }
            unit {
              unitId
              unitName
            }
            conversion
          }
          baseUnit {
            unitId
            unitName
          }
        }
        amount
        batches {
          batchInfo {
            customer {
              customerId
              customerName
              customerType
              lastLevelId
              lastLevelName
            }
            warehouse {
              warehouseId
              warehouseName
            }
            batchCode
            batchId
            commodityTypeId
            commodityTypeName
            createTime
            unit {
              unitId
              unitName
            }
            quantity
            quantityItem {
              unit {
                unitId
                unitName
              }
              quantity
            }
          }
          batch {
            batchCode
            batchId
            createTime
            sourceBatchCode
            sourceBatchId
            unit {
              unitId
              unitName
            }
            quantity
            quantityItem {
              unit {
                unitId
                unitName
              }
              quantity
            }
          }
          itemId
          dynamicQuantity {
            unit {
              unitId
              unitName
            }
            quantity
            quantityItem {
              unit {
                unitId
                unitName
              }
              quantity
            }
          }
          index
        }
        commodityType
        commodityTypeName
        mark
        markName
        returnId
        returnType
        returnableAmount
        returnableQuantity
        saleData {
          salePrice
          saleTotalPrice
          quantity
          saleOrderId
        }
        stockQuantity {
          unit {
            unitId
            unitName
          }
          quantity
        }
        unit {
          unitId
          unitName
        }
      }
      createTime
      differenceOrderType
      remark
      returnCode
      returnId
      returnStatus
      returnStatusName
      returnTime
      returnType
      returnTypeName
      saleOrderCode
      saleOrderId
      saleReturnWay
      saleReturnWayName
      saleTime
      sourceBill2Data {
        billDetailsList {
          supplier {
            supplierId
            supplierName
          }
          billCostData
          billDetailId
          billMainId
          businessItemValue
          costAmount
          costId
          costName
          dictItemId
          note
          paymentType
          ruleCode
          ruleId
          showField
        }
        billMainId
        templateId
        totalTransportFees
      }
    }
    countSaleReturnOrders
    runCode
  }
}

# 内部销售: 列表页以及搜索
query pageInternalSale($input: PitayaPageInternalSaleInput!, $page: Page!) {
  pageInternalSale(input: $input, page: $page) {
    pageCurrent
    pageSize
    records {
      belongOrg {
        orgId
        orgName
      }
      billDetailsList {
        billCostData
        billDetailId
        billMainId
        businessItemValue
        costAmount
        costId
        costName
        dictItemId
        note
        ruleCode
        ruleId
        showField
        supplier {
          supplierId
          supplierName
        }
        paymentType
      }
      billMainId
      commodities {
        commoditySku {
          categoryId
          categoryName
          commodityId
          commodityName
          commoditySkuId
          commoditySkuName
          commoditySpecOptionId
          commoditySpecOptionName
          availableSkuQuantity {
            businessUnit {
              unitId
              unitName
            }
            unit {
              unitId
              unitName
            }
            conversion
          }
          baseUnit {
            unitId
            unitName
          }
        }
        itemId
        saleId
        salePrice
        saleTotalPrice
        batchInfoWithLock {
          customerBelongInfo {
            customerId
            customerName
            customerType
          }
          batchCode
          batchId
          unit {
            unitId
            unitName
          }
          quantity
          quantityItem {
            unit {
              unitId
              unitName
            }
            quantity
          }
        }
        dynamicQuantity {
          unit {
            unitId
            unitName
          }
          quantity
          quantityItem {
            unit {
              unitId
              unitName
            }
            quantity
          }
        }
        mark
        markName
      }
      commodityTotalSalePrice
      commodityTypeId
      commodityTypeName
      createBy {
        phoneNum
        userId
        userName
      }
      createTime
      customer {
        customerId
        customerName
        customerType
        lastLevelId
        lastLevelName
      }
      remark
      saleCode
      saleId
      saleStatus
      saleStatusName
      saleTime
      templateId
      totalTransportFees
      warehouse {
        warehouseId
        warehouseName
      }
      saleSubType
      saleSubTypeName
      appType
      countSaleReturnOrders
      logs {
        createBy {
          phoneNum
          userId
          userName
        }
        createTime
        logType
        logTypeText
      }
      runCode
      saleReturnOrders {
        belongOrg {
          orgId
          orgName
        }
        createBy {
          phoneNum
          userId
          userName
        }
        customer {
          customerId
          customerName
          customerType
          lastLevelId
          lastLevelName
        }
        bill2FetchData {
          billDetailsList {
            supplier {
              supplierId
              supplierName
            }
            billCostData
            billDetailId
            billMainId
            businessItemValue
            costAmount
            costId
            costName
            dictItemId
            note
            paymentType
            ruleCode
            ruleId
            showField
          }
          billMainId
          templateId
          totalTransportFees
        }
        commodities {
          commoditySku {
            availableSkuQuantity {
              businessUnit {
                unitId
                unitName
              }
              unit {
                unitId
                unitName
              }
              conversion
            }
            baseUnit {
              unitId
              unitName
            }
            categoryId
            categoryName
            commodityId
            commodityName
            commoditySkuId
            commoditySkuName
            commoditySpecOptionId
            commoditySpecOptionName
          }
          unit {
            unitId
            unitName
          }
          amount
          batches {
            batchInfo {
              customer {
                customerId
                customerName
                customerType
                lastLevelId
                lastLevelName
              }
              unit {
                unitId
                unitName
              }
              warehouse {
                warehouseId
                warehouseName
              }
              batchCode
              batchId
              commodityTypeId
              commodityTypeName
              createTime
              quantity
              quantityItem {
                unit {
                  unitId
                  unitName
                }
                quantity
              }
            }
            batch {
              unit {
                unitId
                unitName
              }
              batchCode
              batchId
              createTime
              quantity
              quantityItem {
                unit {
                  unitId
                  unitName
                }
                quantity
              }
              sourceBatchCode
              sourceBatchId
            }
            dynamicQuantity {
              unit {
                unitId
                unitName
              }
              quantity
              quantityItem {
                unit {
                  unitId
                  unitName
                }
                quantity
              }
            }
            index
            itemId
          }
          commodityType
          commodityTypeName
          mark
          markName
          returnId
          returnType
          returnableAmount
          returnableQuantity
          saleData {
            quantity
            saleOrderId
            salePrice
            saleTotalPrice
          }
          stockQuantity {
            unit {
              unitId
              unitName
            }
            quantity
          }
        }
        createTime
        differenceOrderType
        remark
        returnCode
        returnId
        returnStatus
        returnStatusName
        returnTime
        returnType
        returnTypeName
        saleOrderCode
        saleOrderId
        saleReturnWay
        saleReturnWayName
        saleTime
        sourceBill2Data {
          billDetailsList {
            supplier {
              supplierId
              supplierName
            }
            billCostData
            billDetailId
            billMainId
            businessItemValue
            costAmount
            costId
            costName
            dictItemId
            note
            paymentType
            ruleCode
            ruleId
            showField
          }
          billMainId
          templateId
          totalTransportFees
        }
      }
    }
    totalRecords
  }
}

# 内部销售: 状态统计
query pitayaCountInternalSaleStatus {
  pitayaCountInternalSaleStatus {
    toBeDelivered
    toBeSubmitted
  }
}

# 内部销售: 取消
mutation cancelInternalSale($input: PitayaInternalSaleIDInput!) {
  cancelInternalSale(input: $input)
}

# 内部销售: 新增
mutation createInternalSale($input: PitayaInternalSaleInput!) {
  createInternalSale(input: $input)
}

# 内部销售: 提交
mutation submitInternalSale($input: PitayaInternalSaleIDInput!) {
  submitInternalSale(input: $input)
}

# 内部销售: 修改
mutation updateInternalSale($input: PitayaInternalSaleInput!, $saleId: ID!) {
  updateInternalSale(input: $input, saleId: $saleId)
}

# 内部销售: 辅料时拉取星云那边获取单价和单价单位
query fmsListStockBatchCostPrice($input: StockBatchCostPriceInput!) {
  fmsListStockBatchCostPrice(input: $input) {
    commodityTypeId
    costPrice
    costPriceTag
    costUnitType
    currentBatchId
  }
}

# 根据channelId获取appType
query getAppTypeByChannelId($channelId: Int!) {
  getAppTypeByChannelId(channelId: $channelId)
}

# 内部销售: 售后待处理角标
query pitayaInternalSaleAfterSaleBadge($input: InternalSaleAfterSaleBadgeInput!) {
  pitayaInternalSaleAfterSaleBadge(input: $input) {
    toBeDealt
  }
}