query taskStatistics($date: Long) {
  taskStatistics(date: $date) {
    toBeProduced
    inProduction
    completed
    canceled
  }
}

# 生产任务:列表
query tasks($page: Page, $taskCondition: TaskCondition) {
  tasks(page: $page, taskCondition: $taskCondition) {
    records {
      taskId
      taskStatus
      taskStatusName
      taskCode
      startTime
      endTime
      schedule
      totalExpectNum
      totalCompletedNum
      customerName
      taskItems {
        commodityName
        skuTextDescription
        totalTypeName
        expectNum
        planChangeNotice
        planCancelCount
      }
      belongOrg {
        orgId
        orgName
      }
      warehouse {
        warehouseId
        warehouseName
      }
    }
    pageCurrent
    pageSize
    totalRecords
  }
}

# 查询生产任务列表
query keywordTasks($keyword: String, $page: Page) {
  keywordTasks(keyword: $keyword, page: $page) {
    records {
      taskId
      taskStatus
      taskStatusName
      taskCode
      startTime
      endTime
      schedule
      totalExpectNum
      totalCompletedNum
      customerName
      taskItems {
        commodityName
        skuTextDescription
        totalTypeName
        expectNum
        planCancelCount
        planChangeNotice
      }
      belongOrg {
        orgId
        orgName
      }
      warehouse {
        warehouseId
        warehouseName
      }
    }
    pageCurrent
    pageSize
    totalRecords
  }
}

query task($taskId: ID!) {
  task(taskId: $taskId) {
    planId
    taskId
    taskCode
    taskStatus
    taskStatusName
    leaderId
    leaderName
    line
    numberPlan
    numberActual
    tempWorkerQuantity
    cancelReason
    abnormalFlag
    plan {
      planId
      planCode
      planStatus
      customerType
      customerId
      customerName
      customerDistributionId
      customerDistributionName
      planDate
      planStartTime
      planEndTime
      planDescription
      createType
      commodityType
      belongOrg {
        orgId
        orgName
      }
      warehouse {
        warehouseId
        warehouseName
      }
    }
    taskItems {
      taskItemId
      planId
      taskId
      commodityId
      commodityName
      commodityBomId
      commoditySkuId
      commoditySpecOptionId
      skuTextDescription
      expectNum
      completedNum
      unitQuantity
      unitType
      unitTypeName
      totalType
      totalTypeName
      planChangeNotice
      changeQuantity
      changeType
      specificationLabel
      packageLabel
      quantityLabel
      outOrderItemId
      commodityStatus
      actualPickingQuantity
    }
  }
  getProductionConfig {
    id
    configCode
    orgId
    configValue {
      ... on WorkerSalaryPayload {
        workerSalary
      }
      ... on ProductionSwitchPayload {
        productionSwitch
      }
    }
    createTime
    updateTime
    createBy
    updateBy
  }
}

query taskLogs($taskId: ID!) {
  taskLogs(taskId: $taskId) {
    taskLogId
    planId
    taskId
    taskLogType
    taskLogTypeText
    taskLogDescription
    createTime
    createBy
    createUserName
  }
}

mutation beginTask($beginTask: BeginTask) {
  beginTask(beginTask: $beginTask)
}

mutation completeTask($completeTaskInput: CompleteTaskInput) {
  completeTask(completeTaskInput: $completeTaskInput)
}

query taskAcquireMaterialCommodities(
  $listTaskAcquireMaterialCommodityInput: ListTaskAcquireMaterialCommodityInput
) {
  taskAcquireMaterialCommodities(
    listTaskAcquireMaterialCommodityInput: $listTaskAcquireMaterialCommodityInput
  ) {
    commodityId
    commodityName
    commodityTypeId
    commodityTypeName
    commodityCategoryId
    commodityCategoryName
    commodityVarietyId
    commodityVarietyName
    commodityPlaceOriginId
    commodityPlaceOriginName
    commoditySkuId
    status
    unitQuantity
    unitType
    unitTypeName
    totalQuantity
    totalType
    totalTypeName
    property
    bomId
    commoditySpecOptionId
    skuTextDescription
    customerName
    customerId
    stockUnitTypeName
    stockUnitQuantity
    stockTotalTypeName
    stockTotalQuantity
    stockBatchCode
    stockBatchId
    outStockRecordItemId
    warehouseId
    warehouseName
    surplusQuantity
    operableQuantity
  }
}

mutation addOutOrder($outOrder: OutOrder) {
  addOutOrder(outOrder: $outOrder)
}

mutation modifyOutOrder($outOrderUpdateInput: OutOrderUpdateInput!) {
  modifyOutOrder(outOrderUpdateInput: $outOrderUpdateInput)
}

query taskItems($taskId: ID!) {
  taskItems(taskId: $taskId) {
    planId
    taskId
    commodityId
    commodityName
    commodityBomId
    commoditySkuId
    commoditySpecOptionId
    skuTextDescription
    expectNum
    completedNum
    unitQuantity
    unitType
    unitTypeName
    totalType
    totalTypeName
  }
}

mutation addInOrder($inOrder: InOrder) {
  addInOrder(inOrder: $inOrder)
}

mutation modifyInOrder($inOrderUpdate: InOrderUpdate!) {
  modifyInOrder(inOrderUpdate: $inOrderUpdate)
}

mutation taskReturned($taskId: ID) {
  taskReturned(taskId: $taskId)
}

query pageMoreCommodities(
  $pageMoreCommoditiesInput: PageMoreCommoditiesInput
  $page: Page
) {
  pageMoreCommodities(
    pageMoreCommoditiesInput: $pageMoreCommoditiesInput
    page: $page
  ) {
    records {
      commodityId
      commodityName
      commodityTypeId
      commodityTypeName
      commodityCategoryId
      commodityCategoryName
      commodityVarietyId
      commodityVarietyName
      commodityPlaceOriginId
      commodityPlaceOriginName
      commoditySkuId
      status
      unitQuantity
      unitType
      unitTypeName
      totalQuantity
      totalType
      totalTypeName
      property
      bomId
      commoditySpecOptionId
      skuTextDescription
      customerName
      customerId
      stockUnitTypeName
      stockUnitQuantity
      stockTotalTypeName
      stockTotalQuantity
      stockBatchCode
      stockBatchId
      outStockRecordItemId
      warehouseId
      warehouseName
      surplusQuantity
      operableQuantity
    }
    pageCurrent
    pageSize
    totalRecords
  }
}

query confirmTaskFinish($taskId: ID!) {
  confirmTaskFinish(taskId: $taskId) {
    interval
    productionOverview {
      pickingSum
      returnSum
      damagedSum
      defectiveSum
      surplusSum
      productAndSemiSum
    }
    picking {
      rawMaterialUnFinish
      rawMaterial
      accessoriesUnFinish
      accessories
      semiFinishedProductsUnFinish
      semiFinishedProducts
      returnedGoodsUnFinish
      returnedGoods
      undone
    }
    warehousing {
      finishedProductUnFinish
      finishedProduct
      semiFinishedProductsUnFinish
      semiFinishedProducts
      defectiveUnFinish
      defective
      undone
      rawMaterial
      rawMaterialUnFinish
      damageGoodsUnFinish
      damageGoods
    }
    returnMaterial {
      rawMaterialUnFinish
      rawMaterial
      accessoriesUnFinish
      accessories
      semiFinishedProductsUnFinish
      semiFinishedProducts
      returnedGoodsUnFinish
      returnedGoods
      undone
      noReturn
    }
    unit {
      unitId
      unitName
    }
  }
}
