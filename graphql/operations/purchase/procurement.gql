query countPurchase($countPurchaseFilter: CountPurchaseFilter) {
  countPurchase(countPurchaseFilter: $countPurchaseFilter) {
    toSubmit
    toInbound
    finished
    canceled
  }
}

query purchaseList($listCondition: PurchaseListFilter, $page: Page) {
  purchaseList(listCondition: $listCondition, page: $page) {
    records {
      inOrderId
      inOrderTypeId
      inOrderTypeName
      inOrderCode
      commodityTypeId
      commodityTypeName
      customerTypeId
      customerTypeName
      customerId
      customerName
      inOrderStatus
      inOrderStatusName
      warehouseId
      warehouseName
      supplierId
      supplierName
      createUserName
      createTime
      inOrderDescription
      errorDescription
      totalPrice
      commodities {
        commodityId
        commodityName
        commoditySkuId
        commoditySpecOptionId
        skuTextDescription
        unitQuantity
        unitType
        unitTypeName
        totalQuantity
        totalType
        totalTypeName
        unitPrice
        unitPriceType
        unitPriceTypeName
        totalPrice
        saleTotalQuantity
        saleUnitQuantity
        saleTotalPrice
        conversion
        inBoundTotalQuantity
        inBoundUnitQuantity
      }
      outOrderId
      saleOrderCode
      deliveryFee
      realDeliveryFee
      canReturn
      transferOrganizationId
      transferOrganizationName
      createUserPhone
      transferType
      transferId
      organizationId
      organizationName
    }
    pageCurrent
    pageSize
    totalRecords
  }
}

mutation createAcquire($createAcquireInput: CreateAcquireInput) {
  createAcquire(createAcquireInput: $createAcquireInput)
}

mutation updateAcquire($updateAcquireInput: UpdateAcquireInput) {
  updateAcquire(updateAcquireInput: $updateAcquireInput)
}

# 采购: 查询采购订单不同状态记录条数
query countAcquire($countAcquireFilter: CountAcquireFilter) {
  countAcquire(countAcquireFilter: $countAcquireFilter) {
    toSubmit
    toInbound
    finished
    canceled
    refused
  }
}

query listAcquire($listAcquireFilter: ListAcquireFilter, $page: Page) {
  listAcquire(listAcquireFilter: $listAcquireFilter, page: $page) {
    records {
      applyId
      applyType
      applyTypeName
      applyCode
      commodityType
      commodityTypeName
      belongType
      belongTypeName
      belongId
      belongName
      applyStatus
      applyStatusName
      warehouseId
      warehouseName
      supplierId
      supplierName
      createUserId
      createUserName
      createTime
      note
      errorDescription
      appliedCount
      exitCost
      commodities {
        skuId
        commodityName
        skuTextDescription
        unitQuantity
        unitType
        unitTypeName
        totalQuantity
        totalType
        totalTypeName
        pricePosition
        price
        priceType
        priceTypeName
        totalPrice
        conversion
        markList
        giveUnitQuantity
        giveTotalQuantity
        inStockTotalQuantity
        inStockGrossUnitQuantity
        inStockUnitQuantity
        inStockPrice
        relevancyCode
      }
      costs {
        costId
        ruleId
        note
        amount
        data
        supplier {
          supplierId
          supplierName
        }
      }
      operationLog {
        status
        statusName
        statusTime
        operationUserId
        operationUserName
      }
      exitReturn
      returnCount
      billId
      belongOrg {
        orgId
        orgName
      }
      existReturnTypeList
      manualCode
    }
    pageCurrent
    pageSize
    totalRecords
  }
}

query getAcquire($getAcquireInput: GetAcquireInput!) {
  getAcquire(getAcquireInput: $getAcquireInput) {
    applyId
    applyType
    applyTypeName
    applyCode
    commodityType
    commodityTypeName
    belongType
    belongTypeName
    belongId
    belongName
    applyStatus
    applyStatusName
    warehouseId
    warehouseName
    supplierId
    supplierName
    createUserId
    createUserName
    createTime
    note
    errorDescription
    appliedCount
    exitCost
    commodities {
      skuId
      commodityName
      skuTextDescription
      unitQuantity
      unitType
      unitTypeName
      totalQuantity
      totalType
      totalTypeName
      pricePosition
      price
      priceType
      priceTypeName
      totalPrice
      conversion
      markList
      giveUnitQuantity
      giveTotalQuantity
      inStockTotalQuantity
      inStockGrossUnitQuantity
      inStockUnitQuantity
      inStockPrice
      relevancyCode
    }
    costs {
      costId
      ruleId
      note
      amount
      data
      supplier {
        supplierId
        supplierName
      }
    }
    operationLog {
      status
      statusName
      statusTime
      operationUserId
      operationUserName
    }
    exitReturn
    returnCount
    billId
    belongOrg {
      orgId
      orgName
    }
    existReturnTypeList
    manualCode
    templateId
  }
}

mutation cancelAcquire($cancelAcquireInput: CancelAcquireInput) {
  cancelAcquire(cancelAcquireInput: $cancelAcquireInput)
}

mutation submitAcquire($submitAcquireInput: SubmitAcquireInput!) {
  submitAcquire(submitAcquireInput: $submitAcquireInput)
}

query purchaseDetail($inOrderId: ID!, $inOrderDetailInput: InOrderDetailInput) {
  purchaseDetail(inOrderId: $inOrderId) {
    inOrderId
    inOrderTypeId
    inOrderTypeName
    inOrderCode
    commodityTypeId
    commodityTypeName
    customerTypeId
    customerTypeName
    customerId
    customerName
    inOrderStatus
    inOrderStatusName
    warehouseId
    warehouseName
    supplierId
    supplierName
    createUserName
    createTime
    inOrderDescription
    errorDescription
    totalPrice
    outOrderId
    saleOrderCode
    deliveryFee
    realDeliveryFee
    canReturn
    transferType
    transferOrganizationName
    organizationName
    createUserPhone
    commodities {
      commodityId
      commodityName
      commoditySkuId
      commoditySpecOptionId
      skuTextDescription
      unitQuantity
      unitType
      unitTypeName
      unitPriceTypeName
      unitPriceType
      totalQuantity
      totalType
      totalTypeName
      unitPrice
      totalPrice
      saleTotalQuantity
      saleUnitQuantity
      saleTotalPrice
      conversion
      inBoundTotalQuantity
      inBoundUnitQuantity
    }
  }
  countInbounded(inOrderDetailInput: $inOrderDetailInput)
}

mutation insertPurchase($purchaseOrderInsert: PitayaPurchaseOrderInsertInput) {
  insertPurchase(purchaseOrderInsert: $purchaseOrderInsert)
}

mutation submitPurchase($inOrderId: ID!) {
  submitPurchase(inOrderId: $inOrderId)
}

mutation modifyPurchase($purchaseOrderUpdate: PitayaPurchaseOrderUpdateInput) {
  modifyPurchase(purchaseOrderUpdate: $purchaseOrderUpdate)
}

mutation cancelPurchase($cancelpurchase: CancelInOrderInput) {
  cancelPurchase(cancelpurchase: $cancelpurchase)
}

# 采购单-接入中台:  状态为`待提交`的采购单数量
query countIndividualPurchaseStatus(
  $countPurchaseStatusInput: CountPurchaseStatusInput
) {
  countIndividualPurchaseStatus(
    countPurchaseStatusInput: $countPurchaseStatusInput
  ) {
    count
    status
  }
}

# 采购单-接入中台:  售后单状态为`待处理`的采购单数量
query countPurchaseByExtendStatus(
  $countPurchaseStatusWithExtendInput: CountPurchaseStatusWithExtendInput
) {
  countPurchaseByExtendStatus(
    countPurchaseStatusWithExtendInput: $countPurchaseStatusWithExtendInput
  )
}

# 采购单-接入中台: 详情
query detailIndividualPurchaseOrder($id: ID) {
  detailIndividualPurchaseOrder(id: $id) {
    billFreightAndMainIdInfo {
      billMainId
      freightItemList {
        supplier {
          supplierId
          supplierName
        }
        amount
        costId
        costName
        data
        dictItemId
        extendId
        note
        ruleId
      }
      purchaseBillCount
      templateId
    }
    commodityList {
      commoditySku {
        totalType {
          unitId
          unitName
        }
        unitType {
          unitId
          unitName
        }
        categoryId
        categoryName
        commodityId
        commodityName
        commoditySkuId
        commoditySkuName
        commoditySpecOptionId
        commoditySpecOptionName
        conversion
      }
      commodityType {
        commodityTypeId
        commodityTypeName
      }
      commodityMarkDescList
      commodityMarkList
      inStockGrossQuantity {
        totalQuantity
        unitQuantity
      }
      inStockQuantity {
        totalQuantity
        unitQuantity
      }
      index
      pricePosition
      purchaseQuantityAndPriceInfo {
        priceType {
          unitId
          unitName
        }
        totalType {
          unitId
          unitName
        }
        unitType {
          unitId
          unitName
        }
        amount
        price
        totalQuantity
        unitQuantity
      }
      batchId
      associatedPurchaseCode
    }
    extendOrderList {
      code
      commodityList {
        commoditySku {
          totalType {
            unitId
            unitName
          }
          unitType {
            unitId
            unitName
          }
          categoryId
          categoryName
          commodityId
          commodityName
          commoditySkuId
          commoditySkuName
          commoditySpecOptionId
          commoditySpecOptionName
          conversion
        }
        batchId
        id
        index
        quantityAndPriceInfo {
          priceType {
            unitId
            unitName
          }
          totalType {
            unitId
            unitName
          }
          unitType {
            unitId
            unitName
          }
          price
          totalQuantity
          unitQuantity
        }
      }
      id
      status
      statusDesc
      type
      typeDesc
    }
    individualPurchaseMainInfo {
      belongOrg {
        orgId
        orgName
      }
      createBy {
        phoneNum
        userId
        userName
      }
      customer {
        customerId
        customerName
        customerType
        lastLevelId
      }
      supplier {
        supplierId
        supplierName
      }
      user {
        phoneNum
        userId
        userName
      }
      warehouse {
        warehouseId
        warehouseName
      }
      code
      createTime
      id
      manualCode
      note
      purchaseDate
      runCode
      statusEnum
      statusEnumDesc
      type
      typeDesc
    }
    instockCount
    purchaseOperationLogList {
      beforeStatus
      beforeStatusDesc
      createTime
      createUser {
        phoneNum
        userId
        userName
      }
      note
      status
      statusDesc
    }
  }
}

# 采购单-接入中台: 入库记录列表,传入的参数为采购单id
query listInstockRecord($id: ID) {
  listInstockRecord(id: $id) {
    createBy {
      phoneNum
      userId
      userName
    }
    commodityList {
      commoditySku {
        totalType {
          unitId
          unitName
        }
        unitType {
          unitId
          unitName
        }
        categoryId
        categoryName
        commodityId
        commodityName
        commoditySkuId
        commoditySkuName
        commoditySpecOptionId
        commoditySpecOptionName
        conversion
      }
      priceType {
        unitId
        unitName
      }
      totalType {
        unitId
        unitName
      }
      unitType {
        unitId
        unitName
      }
      batchCode
      batchId
      inStockGrossQuantity {
        totalQuantity
        unitQuantity
      }
      inStockNetQuantity {
        totalQuantity
        unitQuantity
      }
      price
      pricePositionEnum
      amount
      index
    }
    createTime
    recordCode
    recordId
  }
}

# 采购单-接入中台: 分页列表
query pageIndividualPurchaseOrder(
  $page: Page
  $pageIndividualPurchaseInput: PageIndividualPurchaseInput
) {
  pageIndividualPurchaseOrder(
    page: $page
    pageIndividualPurchaseInput: $pageIndividualPurchaseInput
  ) {
    pageCurrent
    pageSize
    records {
      commodityList {
        commoditySku {
          totalType {
            unitId
            unitName
          }
          unitType {
            unitId
            unitName
          }
          categoryId
          categoryName
          commodityId
          commodityName
          commoditySkuId
          commoditySkuName
          commoditySpecOptionId
          commoditySpecOptionName
          conversion
        }
        commodityType {
          commodityTypeId
          commodityTypeName
        }
        commodityMarkDescList
        commodityMarkList
        inStockGrossQuantity {
          totalQuantity
          unitQuantity
        }
        inStockQuantity {
          totalQuantity
          unitQuantity
        }
        index
        pricePosition
        purchaseQuantityAndPriceInfo {
          priceType {
            unitId
            unitName
          }
          totalType {
            unitId
            unitName
          }
          unitType {
            unitId
            unitName
          }
          amount
          price
          totalQuantity
          unitQuantity
        }
      }
      individualPurchaseMainInfo {
        belongOrg {
          orgId
          orgName
        }
        createBy {
          phoneNum
          userId
          userName
        }
        customer {
          customerId
          customerName
          customerType
          lastLevelId
        }
        supplier {
          supplierId
          supplierName
        }
        user {
          phoneNum
          userId
          userName
        }
        warehouse {
          warehouseId
          warehouseName
        }
        code
        createTime
        id
        manualCode
        note
        purchaseDate
        runCode
        statusEnum
        statusEnumDesc
        type
        typeDesc
      }
    }
    totalRecords
  }
}

# 采购单-接入中台: 更改采购单状态
mutation changeIndividualPurchaseStatus(
  $changePurchaseStatusInput: ChangePurchaseStatusInput
) {
  changeIndividualPurchaseStatus(
    changePurchaseStatusInput: $changePurchaseStatusInput
  )
}

# 采购单-接入中台: 创建采购单
mutation createIndividualPurchaseOrder(
  $createIndividualPurchaseInput: CreateIndividualPurchaseInput
) {
  createIndividualPurchaseOrder(
    createIndividualPurchaseInput: $createIndividualPurchaseInput
  )
}

# 采购单-接入中台: 修改采购单
mutation updateIndividualPurchaseOrder(
  $createIndividualPurchaseInput: CreateIndividualPurchaseInput
  $id: ID
) {
  updateIndividualPurchaseOrder(
    createIndividualPurchaseInput: $createIndividualPurchaseInput
    id: $id
  )
}
